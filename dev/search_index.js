var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = AntennaPattern","category":"page"},{"location":"#AntennaPattern","page":"Home","title":"AntennaPattern","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for AntennaPattern.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [AntennaPattern]","category":"page"},{"location":"#AntennaPattern.antenna_pattern_3D-NTuple{4, Matrix{Float64}}","page":"Home","title":"AntennaPattern.antenna_pattern_3D","text":"antennapattern3D\n\nPlots the 3D antenna pattern.\n\nArgs:\n\nX::Matrix{Float64}: x coordinate, [N x M]\nY::Matrix{Float64}: y coordinate, [N x M]\nZ::Matrix{Float64}: z coordinate, [N x M]\nRN::Matrix{Float64}: normalized data, [N x M]\nkwargs...: keyword arguments\nwidth::Int: width of the plot, default: 800\nheight::Int: height of the plot, default: 800\nxlabel::String: x label, default: \"X\"\nylabel::String: y label, default: \"Y\"\nzlabel::String: z label, default: \"Z\"\ntitle::String: title of the plot, default: \"3D Antenna Pattern\"\nshow_grid::Bool: show grid, default: false\nshow_axis::Bool: show axis, default: false\nlegend::Bool: show legend, default: true\ncolor_scale_plotly::String: color scale for PlotlyJS, default: \"Rainbow\"\ncolor_scale_pyplot::Symbol: color scale for PyPlot, default: :jet\naaxis_show::Bool: show axis, default: true\naaxis_theta::Float64: theta angle of the axis, default: 90.0\naaxis_phi::Float64: phi angle of the axis, default: 0.0\naaxis_color::Symbol: color of the axis, default: :blue\naaxis_linewidth::Float64: line width of the axis, default: 3.0\naaxis_linestyle::Symbol: line style of the axis, default: :auto\naaxis_label::String: label of the axis, default: \"\"\naaxis_axis_multiplier::Float64: axis multiplier, default: 1.3\n\nReturns:\n\np: plot\n\n\n\n\n\n","category":"method"},{"location":"#AntennaPattern.cart2sph-Tuple{Real, Real, Real}","page":"Home","title":"AntennaPattern.cart2sph","text":"cart2sph\n\nTransforms carthesian coordinates to spherical coordinates\n\nINPUTS:\n\nx: x coordinate, Real\ny: y coordinate, Real\nz: z coordinate, Real\n\nOUTPUTS\n\nr: r coordinate in spherical coordinates, Real\nθ: theta coordinate in spherical coordinates, Real\nφ: phi coordinate in spherical coordinates, Real\ntype: [x, y, z]\n\n\n\n\n\n","category":"method"},{"location":"#AntennaPattern.preprocess_CST_3D_ASCII_file-Tuple{String, String}","page":"Home","title":"AntennaPattern.preprocess_CST_3D_ASCII_file","text":"Preprocessing of CST 3D ASCII file\n\nGenerates a CSV file from a CST 3D ASCII file. The CST 3D ASCII file is a text file with the following format:\n\n- [\"Theta[deg.]\", \"Phi[deg.]\", \"|Dir.|[dBi]\", \"|Theta|[dBi]\", \"∠Theta[deg.]\", \"|Phi|[dBi]\", \"∠Phi[deg.]\", \"AR[dB]\"]\n\nInputs:\n\n- input_filename: path to the input file\n- output_filename: path to the output file\n\nOutputs:\n\n- output_filename: processed file\n\n\n\n\n\n","category":"method"},{"location":"#AntennaPattern.set_engine-Tuple{Symbol}","page":"Home","title":"AntennaPattern.set_engine","text":"set_engine\n\nSets the plotting engine. Available engines are:\n\n:plotlyjs\n:pyplot\n\n\n\n\n\n","category":"method"},{"location":"#AntennaPattern.sph2cart-Tuple{Real, Real, Real}","page":"Home","title":"AntennaPattern.sph2cart","text":"sph2Cart\n\nTransforms spherical coordinates to carthesian coordinates\n\nINPUTS\n\nr: r coordinate in spherical coordinates, Real \nθ: theta coordinate in spherical coordinates, Real\nφ: phi coordinate in spherical coordinates, Real\n\nOUTPUTS\n\nx: x coordinate, Real\ny: y coordinate, Real\nz: z coordinate, Real\ntype: [x, y, z]\n\n\n\n\n\n","category":"method"},{"location":"#AntennaPattern.sph2cartData","page":"Home","title":"AntennaPattern.sph2cartData","text":"sph2cartData\n\nConverts spherical data to cartesian data.\n\nArgs:\n\nθ::Vector{Float64}: theta coordinate, [N x 1]\nφ::Vector{Float64}: phi coordinate, [M x 1]\ndata::Matrix{Float64}: data to be converted, [N x M]\noffset::Real: offset of the data (sets the dynamic range of the data), default: 0 (no offset)\nrepeat_first_φ::Bool: repeat first value of the data, default: false\n\nReturns:\n\nx: x coordinate, [N x M]\ny: y coordinate, [N x M]\nz: z coordinate, [N x M]\nr_norm: normalized data, [N x M]\n\n\n\n\n\n","category":"function"},{"location":"#AntennaPattern.@STANDARD_CST_3D_PATTERN_COLUMNS-Tuple{}","page":"Home","title":"AntennaPattern.@STANDARD_CST_3D_PATTERN_COLUMNS","text":"Standard CST 3D ASCII file header\n\n\n\n\n\n","category":"macro"}]
}
